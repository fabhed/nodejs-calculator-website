To create a fully functioning calculator website using Node.js, we will need the following files:

1. package.json: To define the project and its dependencies.
2. server.js: The entry point for the application, which sets up the server and routes.
3. public/index.html: The HTML file containing the calculator UI.
4. public/styles.css: The CSS file for styling the calculator UI.
5. public/scripts.js: The JavaScript file for handling the calculator logic on the client side.

Let's start with the package.json file:

package.json
```json
{
  "name": "calculator-website",
  "version": "1.0.0",
  "description": "A fully functioning calculator website using Node.js",
  "main": "server.js",
  "scripts": {
    "start": "node server.js"
  },
  "dependencies": {
    "express": "^4.17.1"
  }
}
```

Now, let's create the server.js file:

server.js
```javascript
const express = require('express');
const path = require('path');

const app = express();
const PORT = 8000;

app.use(express.static(path.join(__dirname, 'public')));

app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});
```

Next, let's create the public/index.html file:

public/index.html
```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Calculator</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <div class="calculator">
    <input type="text" class="display" readonly>
    <div class="buttons">
      <button>7</button>
      <button>8</button>
      <button>9</button>
      <button>/</button>
      <button>4</button>
      <button>5</button>
      <button>6</button>
      <button>*</button>
      <button>1</button>
      <button>2</button>
      <button>3</button>
      <button>-</button>
      <button>0</button>
      <button>.</button>
      <button>C</button>
      <button>+</button>
      <button class="equals" >=</button>
    </div>
  </div>
  <script src="scripts.js"></script>
</body>
</html>
```

Now, let's create the public/styles.css file:

public/styles.css
```css
body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
  font-family: Arial, sans-serif;
}

.calculator {
  border: 1px solid #ccc;
  border-radius: 5px;
  padding: 1rem;
  width: 200px;
}

.display {
  width: 100%;
  margin-bottom: 0.5rem;
  text-align: right;
}

.buttons {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 0.5rem;
}

button {
  width: 100%;
  padding: 0.5rem;
  font-size: 1.2rem;
  border: 1px solid #ccc;
  border-radius: 5px;
  cursor: pointer;
}

button:hover {
  background-color: #eee;
}

.equals {
  grid-column: 1 / span 4;
  background-color: #f2a33c;
  color: white;
}

.equals:hover {
  background-color: #ef923b;
}
```

Finally, let's create the public/scripts.js file:

public/scripts.js
```javascript
const display = document.querySelector('.display');
const buttons = document.querySelectorAll('button');

buttons.forEach(button => {
  button.addEventListener('click', () => {
    if (button.textContent === 'C') {
      display.value = '';
    } else if (button.textContent === '=') {
      try {
        display.value = eval(display.value);
      } catch (error) {
        display.value = 'Error';
      }
    } else {
      display.value += button.textContent;
    }
  });
});
```

Now, you can run the application by running `npm install` to install the dependencies and then `npm start` to start the server. The calculator website will be accessible at http://localhost:8000.